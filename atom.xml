<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>三亩地</title>
  
  <subtitle>life is a struggle</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-27T01:59:33.976Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>doddd</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux学习笔记(二)命令行整理</title>
    <link href="http://yoursite.com/2019/11/26/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BA%8C-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2019/11/26/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BA%8C-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%95%B4%E7%90%86/</id>
    <published>2019-11-26T14:15:28.000Z</published>
    <updated>2019-11-27T01:59:33.976Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第二波"><a href="#第二波" class="headerlink" title="第二波"></a>第二波</h2><h3 id="时间日期类"><a href="#时间日期类" class="headerlink" title="时间日期类"></a>时间日期类</h3><p><strong>date指令</strong></p><blockquote><p>显示当前时间<br>基本语法：<br>获取日期<br>date 当前完整日期<br>date +%Y     “查看年份”<br>date +%m     “查看月份”<br>date +%d     “查看几号”<br>date “+%Y-%m-%d %H:%M:%S”  “按格式输出日期 (因为有空格需要加引号)”</p></blockquote><blockquote><p>hwclock命令 (即hardwareclock系统硬件时间)<br>    hwclock<br>    hwclock -w     “将系统时间写入到系统硬件当中”</p></blockquote><blockquote><p>设置日期<br> date -s 字符串时间<br> date -s “2018-10-10 11:22:22”</p></blockquote><p><strong>cal指令</strong></p><blockquote><p>查询日期指令<br>基本语法：<br>cal [选项]<br>cal     “查看本月日历”<br>cal 2020     “查看2020年全年日历”</p></blockquote><h3 id="搜索查找类"><a href="#搜索查找类" class="headerlink" title="搜索查找类"></a>搜索查找类</h3><p><strong>find指令</strong></p><blockquote><p>从指定目录向下递归遍历各个子目录，将满足条件的文件或目录显示在终端<br>基本语法：<br>find [范围] [选项]<br>-name     “按名字查找”<br>-user        “按拥有者查找”<br>-size         “按文件大小查找”</p></blockquote><blockquote><p>find /home -name hello.txt<br>find / -name *.txt   (可以查所有后缀为txt的文件)<br>find /home -user doddd<br>find / -size 20M  (单位为M时M要大写 k时 k要小写)<br>                +20M “查找大于20M的文件”<br>                —20M “查找小于20M的文件”<br>                20M  “查找等于20M的文件”</p></blockquote><p><strong>locate指令</strong></p><blockquote><p>快速定位文件路径<br><strong>因为是基于数据库的快速搜索 所以第一次使用需要先用updatedb创建locate数据库</strong><br>基本语法：<br>locate 文件名</p></blockquote><p>不执行updatedb:<br><img src="/2019/11/26/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BA%8C-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%95%B4%E7%90%86/F:%5Cdoddd-col.github.io%5Csource_posts%5CLinux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BA%8C-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%95%B4%E7%90%86%5Clocate%E6%9F%A5%E6%89%BE.png" alt></p><p><strong>grep指令和管道符号(|)</strong></p><blockquote><p>grep过滤查找.<br>“|”，表示将前一个指令输出的结果交给后面的指令处理，将两个指令连接起来<br>基本语法：<br>gerp [选项] 查询内容 源文件<br>-n 显示行号<br>-i  忽略字母大小写</p></blockquote><blockquote><p>cat /home/hello.txt | grep hello -n (用管道符将两个指令连接 先查到hello.txt 在过滤出hello 显示行数)<br>grep -n hello /home/hello.txt (直接用grep 查找源文件并过滤)<br>grep hello /home/hello.txt -ni (忽略大小写并显示行号)</p></blockquote><h3 id="压缩和解压类"><a href="#压缩和解压类" class="headerlink" title="压缩和解压类"></a>压缩和解压类</h3><p><strong>gzip/gunzip指令</strong></p><blockquote><p>gzip用于压缩文件，gunzip用于解压文件<br>基本语法：<br>gzip 文件名 压缩文件 “只能将文件压缩为*.gz文件 “ (不会保留源文件 只保留压缩文件hello.txt.gz)<br>gunzip 文件.gz “解压文件” (不保留压缩文件 只保留解压出来的源文件hello.txt)</p></blockquote><p><strong>zip/unzip指令</strong>(用的比较多)</p><blockquote><p>zip用于压缩文件，unzip用于解压文件<br>基本语法：<br>zip [选项]xxx.zip 压缩的内容 (zip -r mypackage.zip /home/)<br>unzip [选项]xxx.zip    (unzip -d /opt/tmp/ mypackage)<br>zip常用选项<br>-r 递归压缩，压缩目录<br>unzip常用选项<br>-d 目录 指定解压后文件的存放目录</p></blockquote><p><strong>tar指令</strong></p><blockquote><p>tar是打包指令，最后打包后的文件是.tar.gz的文件<br>基本语法：<br>tar [选项] xxx.tar.gz 打包的内容<br>选项说明<br>-c 产生.tar打包文件<br>-v 显示详细信息<br>-f 指定压缩后的文件名<br>-z 打包同时压缩<br>-x 解包.tar文件</p></blockquote><blockquote><p>一般是组合使用<br>tar -zcvf mytar.tar.gz hello.txt info.txt<br>tar -zcvf myhome.tar.gz /home/<br>打包后的文件名可以不带后缀会自动帮加 tar -zcvf myta hello.txt info.txt<br>因为f要接受压缩后的参数，所以要放到后面</p></blockquote><blockquote><p>解压到别的目录需要加上 -C<br>tar -zxvf mytar.tar.gz -C /opt/tmp2</p></blockquote><p><strong>不加-C 或者 目录不存在会报错：</strong><br><img src="/2019/11/26/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BA%8C-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%95%B4%E7%90%86/tarerror.png" alt></p><blockquote><p>bz2类型<br>压缩文件<br>tar -jcvf 打包文件.tar.bz2 被压缩的文件/路径..<br>解压文件<br>tar -jxvf 打包文件.tar.bz2</p></blockquote><h3 id="组管理和权限管理"><a href="#组管理和权限管理" class="headerlink" title="组管理和权限管理"></a>组管理和权限管理</h3><p><strong>组管理介绍</strong><br>Linux每个用户都必须属于一个组，不能独立于组外，<br>每个文件有以下这些概念<br>    所有者，<br>    所在组，<br>    其他组，<br>    改变用户所在组。</p><p><strong>文件/目录所有者</strong></p><blockquote><p>一般为文件的创建者，谁创建了该文件，就自然的成为该文件的所有者<br>查看文件的所有者<br>指令：ls -ahl</p></blockquote><p><strong>修改文件所有者</strong></p><blockquote><p>指令：chown 修改的用户名 文件名<br>只有权限高于该文件所有者才能修改<br>chown tom aa.txt</p></blockquote><p><strong>修改文件所在组</strong></p><blockquote><p>指令：chgrp 修改的组名 文件名<br>只有权限高于该文件所有者才能修改<br>chgrp shaolin ap.zip</p></blockquote><p>权限不足：<br><img src="/2019/11/26/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BA%8C-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%95%B4%E7%90%86/chown%E4%B8%8D%E8%83%BD%E4%BF%AE%E6%94%B9%E9%AB%98%E6%9D%83%E9%99%90%E7%9A%84%E7%94%A8%E6%88%B7.png" alt></p><p><strong>改变用户所在组</strong></p><blockquote><p>指令：usermod -g 修改的组名 用户名<br>usermod -g bandit tom<br>user -d 目录名 用户名 “改变该用户登录的初始目录”</p></blockquote><hr><p><strong>权限管理介绍</strong><br>目录：<img src="/2019/11/26/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BA%8C-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%95%B4%E7%90%86/%E7%9B%AE%E5%BD%95%E6%9D%83%E9%99%90.png" alt><br>文件：<img src="/2019/11/26/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BA%8C-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%95%B4%E7%90%86/%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90.png" alt><br>(rwx为固定顺序)<br>(-)第一位是文件类型：</p><blockquote><p>[-]     普通文件<br>[d]     目录<br>[l]     链接<br>[c]     字符设备(键盘，鼠标)<br>[b]     块文件(硬盘)</p></blockquote><p>(rw-)二到四位是所有者权限：</p><blockquote><p>[r]     可读<br>[w]     可写<br>[x]     可执行<br>[-]     代表该位置的权限</p></blockquote><p>(r–)五到七位是文件所在组的用户权限(与文件所有者在相同组的用户的权限)</p><blockquote><p>同上<br>r– 代表只有写的权限</p></blockquote><p>(r–)八到十位是文件其他组的用户权限(与文件所有者不在相同组的用户的权限)</p><blockquote><p>同上</p></blockquote><p>(1)十一位数字 如果是文件表示硬链接数，如果是目录则表示子目录数</p><p>(police) 所在组</p><p>(0) 如果是文件表示文件大小，如果是目录则是4096</p><p>(最后的时间戳) 表示文件最后的修改时间</p><p><strong><em>rwx作用详解：</em></strong><br><strong><em>rwx作用到文件</em></strong><br><strong><em>[r] 代表可读：可读取</em></strong><br><strong><em>[w] 代表可写：可以修改，但不代表可以删除该文件，删除一个文件的前提示对该文件所在的目录有写的权限</em></strong><br><strong><em>[x] 代表可执行(execute): 可以被执行(绿色的)</em></strong></p><p><strong><em>rwx作用到目录</em></strong><br><strong><em>[r] 代表可读：可以读取，ls查看目录内容</em></strong><br><strong><em>[w] 代表可写：可以修改，目录内创建 + 删除 + 重命名目录</em></strong><br><strong><em>[x] 代表可执行: 可以进入该目录</em></strong><br><strong><em>rwx还可以用数字表示r=4，w=2，x=1，因此r+w+x=7</em></strong></p><p><strong>修改权限</strong></p><blockquote><p>通过chmod指令，可以修改文件或目录的权限<br>第一种方式：“+，-，=”变更权限<br>u:所有者 g:所有组 o:其他人 a:所有人（u+g+o）<br>chmod u=rwx，g=rx，o=x 文件/目录名<br>chmod o+w 文件/目录名<br>chmod a-x 文件/目录名</p></blockquote><blockquote><p>第二种方式：通过数字变更权限<br>chmod u=rwx，g=rx，o=x 文件/目录名<br>相当于chmod 751</p></blockquote><p><strong>修改权限所有者：</strong></p><blockquote><p>chown newowner file “改变文件的所有者”<br>chown newowner:newgroup file “改变用户的所有者跟所有组”<br>-R 如果是目录 则时其下所有子文件或目录递归生效<br>chown tom -R kkk</p></blockquote><p><img src="/2019/11/26/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BA%8C-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%95%B4%E7%90%86/%E9%80%92%E5%BD%92%E9%81%8D%E5%8E%86%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E6%89%80%E6%9C%89%E8%80%85.png" alt></p><p><strong>​修改文件所在组</strong></p><blockquote><p>chgrp newowner file<br>​-R 如果是目录 则时其下所有子文件或目录递归生效<br>​chgrp bandit -R kkk</p></blockquote><p><img src="/2019/11/26/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BA%8C-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%95%B4%E7%90%86/%E9%80%92%E5%BD%92%E9%81%8D%E5%8E%86%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E6%89%80%E6%9C%89%E7%BB%84.png" alt></p><p><strong>如果想让别的用户进入自己的home文件需要该home文件用户或者root用户修改权限：一个x(可执行，至少需要这个否则无权限进入)，一个r（可读，没有这个进去也读不了）</strong></p><p><strong>假如一个文件本组人可以读写，其他的组只能读，当一个其他组的人改变所有组变成该文件所有组，此时他也可以进行读写操作。只要是一个组而且有权限就能操作</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;第二波&quot;&gt;&lt;a href=&quot;#第二波&quot; class=&quot;headerlink&quot; title=&quot;第二波&quot;&gt;&lt;/a&gt;第二波&lt;/h2&gt;&lt;h3 id=&quot;时间日期类&quot;&gt;&lt;a href=&quot;#时间日期类&quot; class=&quot;headerlink&quot; title=&quot;时间日期类&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>jQuey学习笔记</title>
    <link href="http://yoursite.com/2019/11/25/jQuey%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/11/25/jQuey%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2019-11-25T10:17:28.000Z</published>
    <updated>2019-11-25T12:31:44.652Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jQuery知识点整理"><a href="#jQuery知识点整理" class="headerlink" title="jQuery知识点整理"></a>jQuery知识点整理</h1><p>  因为之前做ssm的CRUD练手时候，需要用到jQuery对前端的搭建，所以特地找视频自学了一下，根据视频整理的知识点</p><p> <strong>&lt;s….&gt;&lt;/s….&gt;    js不能用&lt;s….   /&gt;结尾要以&lt;/s….t&gt;结尾</strong> </p><p><strong>$==jQuery</strong></p><p><strong>ready和onload的不同：</strong></p><ul><li>$(document).ready(function(){})：初始化函数 当网页中的dom文档结构(div等 不包含关联图片 视频 资源)绘制完成后 立即执行  <strong>$(document).ready(function(){})=$(function(){});</strong></li><li>window.onload：当网页中的所有内容（关联图片 视频 资源）全部加载完毕后 立即执行 </li></ul><p>dom模型：将html xml等文档结构的标签语言 看成dom模型<br>dom节点有三种类型：</p><ul><li>元素节点：html | ul 等…</li><li>属性节点：title | src  等…</li><li>文本节点：</li></ul><hr><a id="more"></a><h2 id="dom对象和jquery对象的转换："><a href="#dom对象和jquery对象的转换：" class="headerlink" title="dom对象和jquery对象的转换："></a>dom对象和jquery对象的转换：</h2><p>相互转换：<br>$(title).html();<br>        $(title)-&gt;title</p><p>title.innerHTML;<br>        tile -&gt;$(title)</p><blockquote><p><em>dom对象-&gt;jquery对象 :</em><br><em>jquery工厂，  $(dom对象)</em></p></blockquote><blockquote><p><em>jquery对象 -&gt;dom对象:</em><br><em>基础：jquery对象默认是一个数组 或集合   ；dom对象默认是一个单独的对象</em><br>数组：jquery对象[0]<br>集合：jquery对象.get(0)</p></blockquote><p>  <strong>给$()加上[0]自动变成dom对象</strong><br>  比如想要表单清空 只有dom对象有这个功能 就需要jQuery选中表单 变成dom对象 再使用.reset()方法清空<br>$(“form”)[0].reset();</p><hr><h2 id="Jquery选择器：jquery根基"><a href="#Jquery选择器：jquery根基" class="headerlink" title="Jquery选择器：jquery根基"></a>Jquery选择器：jquery根基</h2><p><strong>1.基本选择器</strong></p><pre><code>- 标签选择器：    $(&quot;标签名&quot;)        $(&quot;p&quot;).html() 获取p标签对象，是jquery对象形式的            $(&quot;p&quot;).length- 类选择器：    $(&quot;.class值&quot;)- id选择器    $(&quot;#id值&quot;)- 并集(或)选择器  逗号,    $(&quot;.class值,#id值&quot;)- 全局选择器：    选中全部的元素    $(&quot;*&quot;)</code></pre><p><strong>2.层次选择器（只取后面的那些元素)</strong></p><pre><code>&lt;div id=&quot;parents&quot;&gt;    &lt;div id=&quot;son&quot;&gt;        &lt;div id=&quot;grandson&quot;&gt;        &lt;/div&gt;    &lt;/div&gt;    &lt;select&gt;    &lt;/select&gt;    &lt;p&gt;&lt;/p&gt;&lt;/div&gt;后代选择器 空格    $(&quot;选择器1 选择器2&quot;)parents后代能拿到所有子代选择器 &gt;    $(&quot;选择器&gt;选择器2&quot;)parents子代只能拿 p 和 select son</code></pre><p><strong>3.属性选择器：$(“input[name=gender]”) 选择input标签name属性等于gender的元素</strong></p><pre><code>$(&quot;[class!=a]&quot;)  不等于， 包含两种： 有class但值不是a,   没有class$(&quot;[class^=a]&quot;)  class以a开头的元素$(&quot;[class$=a]&quot;)  class以a结尾的元素$(&quot;[class*=a]&quot;)  class有a的元素</code></pre><p><strong>4.过滤选择器：</strong></p><pre><code>过滤选择器的一些方法 和其他函数类型，例如 $(&quot;ul&gt;li:first&quot;)等价于$(&quot;ul&gt;li&quot;).first()有些不同，例如，  可以$(&quot;ul&gt;li:odd&quot;)    ；错误$(&quot;ul&gt;li&quot;).odd();a.基本过滤选择器（从0开始）    :first：最开头那一个    :last：最后那一个    :even：偶数    :odd:奇数    :eq(index)：第index个    :gt(index) : &gt;index的全部元素    :lt(index): &lt;index的全部元素    :not(选择器) :除了...以外    :header:选中所有的标题元素 h1 h2 &lt;h1&gt;    :focus: 获取当前焦点的元素     $(&quot;input:focus&quot;).css(&quot;background-color&quot;,&quot;red&quot;);选中输入输入框时 背景颜色改变</code></pre><p><strong>5.可见性选择器：</strong></p><pre><code>:visible ：选中所有可见的元素:hidden：选中所有隐藏的元素</code></pre><hr><h2 id="事件-，事件函数（事件方法）"><a href="#事件-，事件函数（事件方法）" class="headerlink" title="事件 ，事件函数（事件方法）"></a>事件 ，事件函数（事件方法）</h2><p><u>js: onXxx</u><br>    <u>onclick();</u><br>    <u>写在&lt;s…&gt;内，ready()外；</u></p><p><u>jquery:没有on<br>    click();</u><br>    <u>ready()内；</u></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">$(选择器).事件类型(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>1.windows事件：</strong></p><ul><li>ready();</li></ul><p><strong>2.鼠标事件：</strong></p><ul><li>click()：单击事件</li><li>mouseover():鼠标悬浮</li><li>mouseout():鼠标离开</li><li>更多事件详看<a href="http://www.w3school.com.cn/tags/html_ref_eventattributes.asp" target="_blank" rel="noopener">W3School</a></li></ul><p><strong>3.键盘事件：</strong></p><ul><li>keydown():按键 从上往下的 过程</li><li>keypress() ： 按键被压到 最底部</li><li>keyup()：松开按键</li></ul><blockquote><p>   前端的一些事件、方法，会在某些情况下失效。 2.兼容性问题   可以通过event.keyCode指定具体的按键</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"body"</span>).keydown(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(event.keyCode == <span class="number">13</span>)&#123;</span><br><span class="line">alert(<span class="string">"回车。。。..."</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>​    </p><p><strong>4.表单事件</strong></p><ul><li>focus()：获取焦点</li><li>blur()：失去焦点</li><li>颜色值：可以使用 英语单词 或者   #6位十六进制<br>  a. #000000:黑色   #ffffff:白色<br>  b. 如果6位 是两两相同的，则可以写成3位,#aabbcc 可以写成#abc</li></ul><p><strong>5.绑定事件与移除事件</strong><br>   $(…).click(  function(){ … });</p><ul><li><p>绑定事件<br>$(…).bind(“事件名”,[数据],函数);<br>$(…).bind(“click”,function(){ … });</p><p>$(…).bind(“mouseover”,function(){ … });</p><p>$(…).bind(“focus”,function(){ … });</p></li><li><p>批量绑定<br>$(…).bind({ “事件名”:函数   ,  “事件名”:函数 ,…,”事件名”:函数 }) ;</p></li><li><p>移除事件：<br>$(…).unbind(“事件名”);</p></li></ul><ul><li>复合事件：<br>hover(f1,f2)：切换使用mouseover()和mouseout()</li></ul><blockquote><p>toggle(f1,f2,f3,…,fn):版本问题(jquery1.9以前支持)<br>    多个click()事件，toggle()还有其他含义（隐藏与显示）</p></blockquote><ul><li><p>显示效果（隐藏与显示）<br>形式：hide([速度],[回调函数]);<br>其中速度：可以是数字（毫秒），也可以是 单词（fast normal  slow，注意加双引号）</p><p>  hide();隐藏<br>  show();显示<br>  toggle()：切换隐藏与显示</p></li></ul><blockquote><p>淡入淡出（透明度）<br>fadeIn():淡入  显示<br>fadeOut():淡出 隐藏</p><p>控制高度<br>slideDown():下拉，显示<br>slideUp();上拉  隐藏</p></blockquote><ul><li>总结显示问题：<br>  显示：show()  fadeIn()  slideDown();<br>  隐藏：hide()    fadeOut()    slideUp();</li></ul><hr><h2 id="操作DOM"><a href="#操作DOM" class="headerlink" title="操作DOM"></a>操作DOM</h2><pre><code>a.样式操作i.设置css()    jquery对象.css(&quot;属性名&quot;,&quot;属性值&quot;);    jquery对象.css({ &quot;属性名&quot;:&quot;属性值&quot;      ,&quot;属性名&quot;:&quot;属性值&quot; ,...,&quot;属性名&quot;:&quot;属性值&quot;     });ii.追加或移除样式class    addClass(&quot;x&quot;);    addClass(&quot;x x x&quot;);    removeClass(x);    removeClass(x x );    removeClass():移除全部样式    toggleClass(&quot;x x x&quot;):切换追加与移除b.内容操作    html()：获取值 ，获取的是元素 的内容 ，包含了 元素内部的 各种标签    html(xxxx) :先渲染，后显示    text()：：获取值 ，值获取文本值    text(xxxx)：將值原样显示，没有渲染    val()：获取value值    val(xxx)：设置value值c.节点与属性操作    i.节点操作        ①查询节点  （jquery选择器）        ②创建节点  ：  $()            $(选择器):获取节点                    $(DOM对象)：转换            $(html字符串)，   $(&quot;&lt;li onclick=&quot;..&quot;&gt;xxx&lt;/li&gt;&quot;)        ③插入节点  文档        ④替换节点            $X.replaceWith($Y)    ：用$Y替换$X                replaceAll();        ⑤删除节点            remove()：彻底删除            detach()：将结点删除，但关联的事件、数据不会删除（不推荐使用）            empty()    ：只删除内容        ⑥克隆节点            clone(true|false)            $(document).ready(function(){                     $(&quot;li&quot;).click(function(){  ... });            });                          &lt;li&gt;xxxx&lt;/li&gt;    ii.属性操作         attr(&quot;属性名&quot;) ：获取属性值        attr(&quot;属性名&quot;,&quot;属性值&quot;) ：设置属性值        attr({ &quot;属性名&quot;:&quot;属性值&quot;,    &quot;属性名&quot;:&quot;属性值&quot; ,  &quot;属性名&quot;:&quot;属性值&quot; } );        删除属性值        removeAttr(&quot;属性名&quot;);d.获取集合与遍历集合    子节点集合     $(...).children( &quot;li&quot;)    后代集合(不推荐使用，影响性能)     $(...).find( &quot;li&quot;)</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>...<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>1.同辈集合</strong></p><ul><li>next()：后一个  +</li><li>prev(): 前一个</li><li>siblings()：同辈，左、右</li></ul><p><strong>2.前辈</strong></p><ul><li>parent():父代</li><li>parents(“ul”):祖先</li></ul><p><strong>3.过滤集合：</strong></p><ul><li>很多方法的()就是一个过滤选择器</li><li>filter(“选择器…”);  </li></ul><p><strong>4.遍历集合：</strong></p><ul><li>$(…).each(function(index,element){});<br>也可以是$.each(…,function(){<br>});</li><li>要注意 element是dom对象 要变成jQuery对象才能使用</li></ul><p><strong>5.CSS-dom操作:</strong><br>height(500) ;<br>width(500)<br>offset()：偏移量（左上角的点）,left top<br>offset(function(n,oldOffset){   … })<br>offsetParent()：获取  （已定位）的最近的祖先元素<br>已定位：元素position属性(默认static)被设置为了relative  absolute  或fixed<br>scrollLet()<br>scrollTop()</p><p><strong>重要：表单校验，可以减轻对服务端的访问次数</strong></p><ul><li>获取要校验的元素值(选择器)    用户名、密码</li><li>通过 字符串处理方法、或者 正则表达式等手段 进行校验  “<a href="mailto:aaa@abc.com" target="_blank" rel="noopener">aaa@abc.com</a>“.indexOf(“@”) !=-1</li><li>触发校验的方法或事件（校验时机）<br>  blur()：失去焦点时触发<br>  change():当里面的值发生改变时<br>  submit()：当点击表单的 “提交submit”按钮时 触发</li></ul><pre><code>onblur=&quot;xxx()&quot;onsubmit=&quot;xx()&quot;</code></pre><blockquote><p>submit()或onsubmit的返回值 会决定表单是否跳转，如果返回true则正常跳转；如果返回false 则终止条件</p></blockquote><pre><code>在校验时建议的写法：if(....不合理的情况) alert() ; return false ;if(....不合理的情况) alert() ; return false ;if(....不合理的情况) alert() ; return false ;if(....不合理的情况) alert() ; return false ;return true ;</code></pre><p>正则表达式：用于定义规则<br>    email=”aaa” ;</p><pre><code>正则表达式.test( email);    </code></pre><p>使用：<br>    手写的正则表达式规则.test(校验的值) -&gt; true|false</p><blockquote><p>正则表达式 误区：有些时候完全没必要使用</p></blockquote><p>var reg=/^\w+@\w+.[a-zA-Z]{2,3}(.[a-zA-Z]{2,3})?$/;</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;jQuery知识点整理&quot;&gt;&lt;a href=&quot;#jQuery知识点整理&quot; class=&quot;headerlink&quot; title=&quot;jQuery知识点整理&quot;&gt;&lt;/a&gt;jQuery知识点整理&lt;/h1&gt;&lt;p&gt;  因为之前做ssm的CRUD练手时候，需要用到jQuery对前端的搭建，所以特地找视频自学了一下，根据视频整理的知识点&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;&amp;lt;s….&amp;gt;&amp;lt;/s….&amp;gt;    js不能用&amp;lt;s….   /&amp;gt;结尾要以&amp;lt;/s….t&amp;gt;结尾&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;$==jQuery&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ready和onload的不同：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$(document).ready(function(){})：初始化函数 当网页中的dom文档结构(div等 不包含关联图片 视频 资源)绘制完成后 立即执行  &lt;strong&gt;$(document).ready(function(){})=$(function(){});&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;window.onload：当网页中的所有内容（关联图片 视频 资源）全部加载完毕后 立即执行 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dom模型：将html xml等文档结构的标签语言 看成dom模型&lt;br&gt;dom节点有三种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;元素节点：html | ul 等…&lt;/li&gt;
&lt;li&gt;属性节点：title | src  等…&lt;/li&gt;
&lt;li&gt;文本节点：&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
    
    
      <category term="jQuery" scheme="http://yoursite.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习笔记(一)--命令行整理</title>
    <link href="http://yoursite.com/2019/11/25/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2019/11/25/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%95%B4%E7%90%86/</id>
    <published>2019-11-25T10:17:04.000Z</published>
    <updated>2019-11-26T03:24:47.289Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习前的小坑"><a href="#学习前的小坑" class="headerlink" title="学习前的小坑"></a>学习前的小坑</h2><p>没选到Linux课程只能自己看视频学习了，记录一下日常学习笔记还有一些学习路上的坑吧</p><p>先是下载虚拟机VMware Workstation Pro，这个真的是难受，下载必须要账号，注册的时候验证码老是过不了，而且打的拼音还会在上面<br>记一个52<a href="https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.5.0-14665864.exe" target="_blank" rel="noopener">下载地址</a>,<a href="https://www.52pojie.cn/thread-1027984-1-1.html" target="_blank" rel="noopener">其他版本</a></p><p>下载好之后安装又碰到问题：vmware要求重启完成Microsoft VC Redistributable安装<br>重启了还是不行 搜索了半天也只有一个跟我一样的，还是没解决，我就下载DirectX修复工具尝试修复一下VC库，结果居然能安装了，带一个地址<a href="http://www.pc6.com/softview/SoftView_57945.html" target="_blank" rel="noopener">DirectX修复工具</a></p><p>启动Linux还出现这个<img src="/2019/11/25/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%95%B4%E7%90%86/VMware%E9%94%99%E8%AF%AF.png" alt><br>要进到Bios模式 将处理虚拟技术打开</p><p>VMware Tools怎么装都装不上 还是等后续学一些东西在来解决吧<br>创建共享文件来代替 复制文件功能</p><a id="more"></a><hr><h2 id="命令行整理"><a href="#命令行整理" class="headerlink" title="命令行整理"></a>命令行整理</h2><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>vi + 路径里的文件名</td><td>编辑器打开文本</td></tr><tr><td>shfit + z + z</td><td>保存退出</td></tr><tr><td>reboot 或 shutdown -r now</td><td>重启</td></tr><tr><td>halt 或 shutdown -h now</td><td>关机</td></tr><tr><td>shutdown -h 1</td><td>一分钟后关机</td></tr><tr><td>sync</td><td>将内存数据同步到磁盘（一般关机前执行）</td></tr><tr><td>pwd</td><td>打印出当前目录的绝对路径</td></tr><tr><td>hostname</td><td>查看计算机名字</td></tr><tr><td>ls<br>ls -a<br>ls -l<br>ls -la</td><td>查看当前目录下的文件<br>-a 查看所有文件  包括隐藏文件<br>-l 列表形式展示<br>-可以连用 ls -la 执行两个效果</td></tr><tr><td>cd ../..</td><td>退出两级目录</td></tr></tbody></table><p><strong>vi和vim：</strong></p><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>dd</td><td>删除当前选中行</td></tr><tr><td>5dd</td><td>删除包括当前行在内的5行</td></tr><tr><td>yy</td><td>复制当前行 按p粘贴</td></tr><tr><td>5yy</td><td>复制包括当前行在内的5行</td></tr><tr><td>G</td><td>调到末尾</td></tr><tr><td>gg</td><td>回到顶部</td></tr><tr><td>:set nu</td><td>显示行数</td></tr><tr><td>:set nonu</td><td>不显示</td></tr><tr><td>:wq</td><td>写入并退出</td></tr><tr><td>:q</td><td>没有编辑可以直接退出(编辑过会提示你加!)</td></tr><tr><td>:q!</td><td>编辑过 不保存强制退出</td></tr><tr><td>数字 + 回车</td><td>跳到选中行数的下一行</td></tr><tr><td>/word</td><td>查找word N向上找 n向下找</td></tr></tbody></table><hr><h4 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h4><p>基本语法：</p><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>useradd [选项] 用户名</td><td>增加一个用户</td></tr><tr><td>useradd -d 指定目录 用户名<br>如：useradd -d /home/tiger xh</td><td>给新用户指定home目录地址</td></tr><tr><td>logout</td><td>注销账户</td></tr><tr><td>passwd 用户名</td><td>修改用户名密码</td></tr><tr><td>userdel 用户名</td><td>删除用户（保留home目录）</td></tr><tr><td>userdel -r 用户名</td><td>删除用户及用户home目录</td></tr><tr><td>id 用户名</td><td>查看该用户信息</td></tr></tbody></table><p><strong>如果已经创建了tiger：useradd：警告：此主目录已经存在。不从 skel 目录里向其中复制任何文件。</strong><br><strong>没有创建不会警告</strong><br><strong>xh的home目录 就是tiger 不是xh</strong></p><p><strong>删除一般不会将家目录删除</strong></p><p>uid=1000(doddd) gid=1000(doddd) 组=1000(doddd)<br>uid 用户id<br>gid 所在组id<br>组 组名称</p><hr><h4 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h4><p>基本语法：</p><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>su - 用户名</td><td>切换用户<br>高权限向低权限切换不用输密码<br>低-&gt;高 需要输密码</td></tr><tr><td>exit</td><td>可以直接退出切换的用户返回 自己的账号</td></tr><tr><td>whoami</td><td>查看当前用户</td></tr></tbody></table><p>exit效果：<img src="/2019/11/25/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%95%B4%E7%90%86/exit%E5%88%87%E6%8D%A2.png" alt></p><hr><h4 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h4><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>groupadd 组名</td><td>增加</td></tr><tr><td>groupdel 组名</td><td>删除</td></tr><tr><td>useradd -g 用户组 新用户名</td><td>指定新用户的分组</td></tr><tr><td>usermod -g 新用户组 用户名<br>如：usermod -g shaolin zwj</td><td>修改用户分组</td></tr></tbody></table><p><em>用户配置文件：/etc/passwd  (用户信息)</em></p><p><em>组件配置文件：/etc/group    (组信息)</em></p><p><em>口令配置文件：/etc/shadow  (密码和登录信息 加密的)</em></p><hr><h3 id="指定运行级别-七个级别"><a href="#指定运行级别-七个级别" class="headerlink" title="指定运行级别 七个级别"></a>指定运行级别 七个级别</h3><p>0：关机<br>1：单用户(找回丢失密码)<br>2：多用户无网络服务<br>3：多用户有网络服务<br>4：保留<br>5：图形界面<br>6：重启<br>常用3和5</p><p>centOS8 /etc/inittab 已经修改了<br>但是也可以用init 3进入命令行 init 5返回图形界面</p><p><img src="/2019/11/25/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%95%B4%E7%90%86/centOS8inittab.png" alt></p><hr><h3 id="文件目录类"><a href="#文件目录类" class="headerlink" title="文件目录类"></a>文件目录类</h3><h4 id="map指令"><a href="#map指令" class="headerlink" title="map指令"></a>map指令</h4><blockquote><p>man+命令 可以查看命令用法 更详细 man 有事问男人<br>​    </p></blockquote><h4 id="help指令"><a href="#help指令" class="headerlink" title="help指令"></a>help指令</h4><blockquote><p>help+命令 简单的介绍命令</p></blockquote><h4 id="touch指令"><a href="#touch指令" class="headerlink" title="touch指令"></a>touch指令</h4><blockquote><p>touch 文件名.后缀   创建文件 能一次创建多个文件<br>​rm -r 文件名.后缀   删除文件 能一次删除多个文件</p></blockquote><h4 id="cp指令"><a href="#cp指令" class="headerlink" title="cp指令"></a>cp指令</h4><blockquote><p>cp [选项] source dest 复制文件<br>​cp hello.txt doddd<br>​cp -r 调用递归 复制文件夹<br>​    </p></blockquote><h4 id="mkdir指令"><a href="#mkdir指令" class="headerlink" title="mkdir指令"></a>mkdir指令</h4><blockquote><p>mkdir 创建目录<br>​mkdir -p 级联创建目录<br>​rmdir 删除空文件夹<br>​rm -rf 删除文件夹 有内容也能删</p></blockquote><h4 id="rm指令"><a href="#rm指令" class="headerlink" title="rm指令"></a>rm指令</h4><blockquote><p>rm指令移除文件或目录<br>基本语法：<br>rm [选项] 要删除的文件或目录<br>常用：<br>-r 递归删除整个文件<br>-f 强制删除不提醒<br>需要删除文件夹时且不想提示可以连用 -rf</p></blockquote><h4 id="mv指令"><a href="#mv指令" class="headerlink" title="mv指令"></a>mv指令</h4><blockquote><p>mv移动文件与目录或重命名<br>基本语法：<br>mv oldFileName newFileName  重命名<br>mv aaa.txt pig.txt </p><p>mv /temp/movefile /targetFolder 移动文件<br>mv aaa.txt /home</p></blockquote><p><strong>移动到当前目录下就是改名 不同目录移动位置</strong></p><h4 id="cat指令"><a href="#cat指令" class="headerlink" title="cat指令"></a>cat指令</h4><blockquote><p>cat查看文件<br>基本语法：<br>cat [选项] 文件名<br>-n 显示行号</p><p>因为一次性全显示出来 一般配合 管道命令 | more 进行分页浏览<br>cat -n /etc/profile | more  （-n写在后面也行 但是不能写到管道符后 因为是cat的指令）</p></blockquote><h4 id="more指令"><a href="#more指令" class="headerlink" title="more指令"></a>more指令</h4><blockquote><p>基于vi的一个文本过滤器 内置快捷键<br>基本语法：<br>more 文件名</p><p>ctrl + b 上一页<br>ctrl + f 下一页<br>空格下一页<br>回车下一行</p></blockquote><h4 id="less指令"><a href="#less指令" class="headerlink" title="less指令"></a>less指令</h4><blockquote><p>用来分屏查看文章内容 但不是一次性加载完成 而是基于显示内容加载 对于显示大型文件有较高的效率<br>基本语法：<br>less 文件名</p><p>pagedown 向下翻<br>pageup 向上翻<br>空格 下一页<br>可以用/word 搜索 n下 N上</p></blockquote><h4 id="gt-指令和-gt-gt-指令"><a href="#gt-指令和-gt-gt-指令" class="headerlink" title="&gt;指令和&gt;&gt;指令"></a>&gt;指令和&gt;&gt;指令</h4><blockquote><p>“&gt;”输入重定向：会覆盖 会将原来文件的内容覆盖<br>“&gt;&gt;” 追加：不会覆盖 会将追加的内容写到原来文件的末尾<br>    基本语法：<br>    ls -l&gt;文件   将刚才查询的文件列表信息输出到文件里 覆盖写 (如果文件不存在就创建文件 如果存在就直接覆盖)<br>    ls -la&gt;&gt;文件   将刚才查询的所有文件列表信息 追加到文件的末尾<br>    cat 文件1&gt;文件2  将文件1的内容覆盖掉文件2的内容<br>    cat 文件1&gt;&gt;文件2  将文件1的内容追加的文件2的末尾</p></blockquote><blockquote><p>echo指令<br>echo “内容” &gt; 文件<br>echo “内容” &gt;&gt; 文件</p></blockquote><h4 id="echo指令"><a href="#echo指令" class="headerlink" title="echo指令"></a>echo指令</h4><blockquote><p>echo输出内容到控制台<br>基本语法：<br>echo [选项] [输出内容]<br>实例：<br>echo $PATH        输出环境变量<br>echo “hello”    输出helloworld</p></blockquote><h4 id="head指令"><a href="#head指令" class="headerlink" title="head指令"></a>head指令</h4><blockquote><p>用于显示文件头部内容 默认是显示前10行<br>基本语法：<br>head 文件 查看文件前十行内容<br>head -n 5 文件 查看文件前5行内容    </p></blockquote><p><strong>添加选项位置不固定只要在head 后面就行 可以先文件后-n 5 也可以相反</strong></p><h4 id="tail指令"><a href="#tail指令" class="headerlink" title="tail指令"></a>tail指令</h4><blockquote><p>tail指令用来查看文件末尾10行内容<br>基本语法：<br>tail 文件    默认查看后10行内容<br>tail 文件 -n 5 查看后5行内容 5是随意行数<br>tail 文件 -f 可以实时追踪该文档的所有更新 (用的比较多)</p></blockquote><p>tail -f效果图：</p><p><img src="/2019/11/25/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%95%B4%E7%90%86/tail%E6%89%A7%E8%A1%8C%E8%A6%86%E7%9B%96.png" alt></p><p><img src="/2019/11/25/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%95%B4%E7%90%86/tail-f%E5%AE%9E%E6%97%B6%E8%BF%BD%E8%B8%AA.png" alt></p><h4 id="ln指令"><a href="#ln指令" class="headerlink" title="ln指令"></a>ln指令</h4><blockquote><p>软链接（符号链接） 类似windows里面的快捷方式  主要存放链接其他文件的路径<br>基本语法：<br>ln -s [原文件或目录] [软链接名]   给原文件穿件一个软链接<br>ln -s /root linkToRoot<br>如果用 linkToRoot进入 /root<br>pwd 显示实在 linkToRoot</p></blockquote><h4 id="history指令"><a href="#history指令" class="headerlink" title="history指令"></a>history指令</h4><blockquote><p>查看已经执行过的指令<br>基本语法：<br>history          查看全部<br>history 5         查看最近5个历史命令<br>!+历史命令行数     执行指定行命令<br>!201             执行历史第201个命令</p></blockquote><p>可以 history &gt;&gt; myhistory 将指令保存(学了又忘 保存复习 唉…)</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;学习前的小坑&quot;&gt;&lt;a href=&quot;#学习前的小坑&quot; class=&quot;headerlink&quot; title=&quot;学习前的小坑&quot;&gt;&lt;/a&gt;学习前的小坑&lt;/h2&gt;&lt;p&gt;没选到Linux课程只能自己看视频学习了，记录一下日常学习笔记还有一些学习路上的坑吧&lt;/p&gt;
&lt;p&gt;先是下载虚拟机VMware Workstation Pro，这个真的是难受，下载必须要账号，注册的时候验证码老是过不了，而且打的拼音还会在上面&lt;br&gt;记一个52&lt;a href=&quot;https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.5.0-14665864.exe&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载地址&lt;/a&gt;,&lt;a href=&quot;https://www.52pojie.cn/thread-1027984-1-1.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;其他版本&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载好之后安装又碰到问题：vmware要求重启完成Microsoft VC Redistributable安装&lt;br&gt;重启了还是不行 搜索了半天也只有一个跟我一样的，还是没解决，我就下载DirectX修复工具尝试修复一下VC库，结果居然能安装了，带一个地址&lt;a href=&quot;http://www.pc6.com/softview/SoftView_57945.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;DirectX修复工具&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;启动Linux还出现这个&lt;img src=&quot;/2019/11/25/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%95%B4%E7%90%86/VMware%E9%94%99%E8%AF%AF.png&quot; alt&gt;&lt;br&gt;要进到Bios模式 将处理虚拟技术打开&lt;/p&gt;
&lt;p&gt;VMware Tools怎么装都装不上 还是等后续学一些东西在来解决吧&lt;br&gt;创建共享文件来代替 复制文件功能&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建以及插件安装踩坑</title>
    <link href="http://yoursite.com/2019/11/24/hexo%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85%E8%B8%A9%E5%9D%91/"/>
    <id>http://yoursite.com/2019/11/24/hexo%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85%E8%B8%A9%E5%9D%91/</id>
    <published>2019-11-24T02:55:07.000Z</published>
    <updated>2019-11-24T04:37:55.893Z</updated>
    
    <content type="html"><![CDATA[<p>花了两天时间终于把个人博客弄好了，目前是搭建在github，等域名备案好后，再转移吧。<br>有很多博客框架，我选hexo是因为用的人比较多出问题容易google<br>怎么安装网上奶妈级教程就太多了就不重复啰嗦了 记一个超详细的hexo<a href="https://blog.csdn.net/sinat_37781304/article/details/82729029" target="_blank" rel="noopener">教程</a><br>因为我之前就安装好git了所以大致流程就是</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">安装<span class="keyword">node</span>.<span class="title">js</span> -&gt; 安装hexo -&gt; github部署</span><br></pre></td></tr></table></figure><p>安装好node.js后最好安装cnpm 这是国内的淘宝镜像 速度会比较快</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> install -g cnpm --registry=https:<span class="regexp">//</span>registry.<span class="built_in">npm</span>.taobao.org</span><br></pre></td></tr></table></figure><a id="more"></a><hr><p>记几个命令：</p>  <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- npm install -g hexo-cli                   安装</span><br><span class="line">- hexo init blog                          初始化（本地blog文件）</span><br><span class="line">- hexo s = hexo<span class="built_in"> server </span>           启动本地服务</span><br><span class="line">- hexo g = hexo generator               生成新的静态文件</span><br><span class="line">- hexo n = hexo new <span class="string">"myfirstblog"</span>     生成一篇新blog</span><br><span class="line">- hexo d = hexo deploy                      将更新的blog部署到服务器</span><br><span class="line">- hexo clean       清除之前生成静态文件 (有时候做了一些更新一直不出效果 可能需要用</span><br></pre></td></tr></table></figure><p>一般部署三连就是 </p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hexo</span> <span class="string">clean </span></span><br><span class="line"><span class="attr">hexo</span> <span class="string">g</span></span><br><span class="line"><span class="attr">hexo</span> <span class="string">d</span></span><br></pre></td></tr></table></figure><hr><h2 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h2><p>git一直执行不了hexo命令，返回报usage<br>后来才发现 很多hexo命令都需要在根目录才能执行 建好blog后 cd blog一下….</p><p>hexo d后 ERROR Deployer not found: git<br>缺少git部署插件 npm install –save hexo-deployer-git</p><p>还有就是修改头像<br>按照网上教程一步一步走还是不行  最后发现 是有两个_config文件:<br>一个是blog根目录里的 一个是themes里面的<br>修改头像再要themes里面的_config修改</p><p>在文章插图片也需要安装插件 npm install hexo-asset-image –save<br>还要将_config文件里面的post_asset_folder:这个选项设置为true<br>然后 执行命令hexo n “blog” 就是在/source/_posts目录下有一个同名文件 在里面放要用的图片<br>我试了下自己创建的话 好像不行 反正我是没插进去<br>图片插入格式：<img src="/2019/11/24/hexo%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85%E8%B8%A9%E5%9D%91/%E5%9B%BE%E7%89%87%E5%90%8D%E5%AD%97.png" alt></p><p>还有一个问题没解决 就是点击 ‘所有文章’ 和 ‘关于我’ 都会弹出一个空白页 在_config里面修改 open_in_new: false 也没用   难受</p><hr><h2 id="一些小功能"><a href="#一些小功能" class="headerlink" title="一些小功能"></a>一些小功能</h2><p>截断文章是 <!--more-->  如果文章太长 需要截断就在截断地方加上</p><p>给文章添加标签<br>在标题下加上tab: xxx<br>多个标签格式为 [tag1, tag2]<br>注：逗号之后要有一个空格。[tag1, tag2]= [tag1+逗号+空格+tag2]</p><p>要是添加rss(订阅功能) 需要插件npm i hexo-generator-feed</p><hr><p>附上几个常用插件教程链接<br><a href="https://www.jianshu.com/p/40a247c61cb0" target="_blank" rel="noopener">hexo下yilia主题添加字数统计和阅读时长功能</a><br><a href="https://blog.zscself.com/posts/ee4d9ecb/" target="_blank" rel="noopener">增加版权信息</a><br><a href="https://blog.csdn.net/LF21011501/article/details/88884820" target="_blank" rel="noopener">Hexo+yilia主题添加网页访问计数功能</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;花了两天时间终于把个人博客弄好了，目前是搭建在github，等域名备案好后，再转移吧。&lt;br&gt;有很多博客框架，我选hexo是因为用的人比较多出问题容易google&lt;br&gt;怎么安装网上奶妈级教程就太多了就不重复啰嗦了 记一个超详细的hexo&lt;a href=&quot;https://blog.csdn.net/sinat_37781304/article/details/82729029&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;教程&lt;/a&gt;&lt;br&gt;因为我之前就安装好git了所以大致流程就是&lt;/p&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;安装&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;js&lt;/span&gt; -&amp;gt; 安装hexo -&amp;gt; github部署&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;安装好node.js后最好安装cnpm 这是国内的淘宝镜像 速度会比较快&lt;/p&gt;
&lt;figure class=&quot;highlight coffeescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;npm&lt;/span&gt; install -g cnpm --registry=https:&lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt;registry.&lt;span class=&quot;built_in&quot;&gt;npm&lt;/span&gt;.taobao.org&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>第一次项目实记SSM_HRMS_Project</title>
    <link href="http://yoursite.com/2019/11/22/%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%AE%B0SSM-HRMS-Project/"/>
    <id>http://yoursite.com/2019/11/22/%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%AE%B0SSM-HRMS-Project/</id>
    <published>2019-11-22T15:45:03.000Z</published>
    <updated>2019-11-24T04:33:13.250Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SSM-HRMS-Project"><a href="#SSM-HRMS-Project" class="headerlink" title="SSM_HRMS_Project"></a>SSM_HRMS_Project</h1><p>刚学完Spring等框架，从网上借鉴一些前辈的项目架构（代码就是从模仿开始….） 还有aiguigu的视频结合 完成这个入门级的练手SSM项目</p><p><a href="https://blog.csdn.net/noaman_wgs/article/details/79503559" target="_blank" rel="noopener">借鉴链接</a></p><p><img src="/2019/11/22/%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%AE%B0SSM-HRMS-Project/SSM_page.png" alt></p><p>目的是熟悉ssm框架以及前后端的一个简单搭建流程 完成CRUD等简单操作 </p> <a id="more"></a> <p>大概用到的技术：</p><blockquote><p><strong>后端</strong>：</p></blockquote><ul><li><p>框架：Spring+SpringMVC+Mybatis</p></li><li><p>数据库：Oracle</p></li><li><p>校验JRS303（hibernate）</p></li><li><p>采用rest风格</p></li></ul><blockquote><p><strong>前端</strong>：</p></blockquote><ul><li><p>框架：bootstrap快速搭建页面</p></li><li><p>jQuery(<del>不使用jstl表达式</del> 所有数据访问增加删除修改都是发起ajax请求返回Json数据)</p></li></ul><blockquote><p><strong>工具</strong>：</p></blockquote><ul><li><p>开发软件：intellij IDEA</p></li><li><p>依赖Maven管理项目和构建</p></li><li><p>以及分页工具PageHelper</p></li></ul><hr><blockquote><p><strong>项目目录结构：</strong></p></blockquote><p>1). Java</p><p><img src="/2019/11/22/%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%AE%B0SSM-HRMS-Project/SSM_HRMS_src.png" alt></p><p>2). Mybatis映射文件</p><p><img src="/2019/11/22/%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%AE%B0SSM-HRMS-Project/SSM_HRMS_resource.png" alt></p><p>3). Web以及Spring框架配置文件</p><p><img src="/2019/11/22/%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%AE%B0SSM-HRMS-Project/SSM_HRMS_webapp.png" alt></p><p>4). 测试</p><p><img src="/2019/11/22/%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%AE%B0SSM-HRMS-Project/SSM_HRMS_test.png" alt></p><hr><p>​    </p><p>​    </p><h2 id="第一步-建表和Mybatis逆向工程"><a href="#第一步-建表和Mybatis逆向工程" class="headerlink" title="第一步     建表和Mybatis逆向工程"></a>第一步     建表和Mybatis逆向工程</h2><p>1.员工表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">"SYSTEM"</span>.<span class="string">"TBL_EMP2"</span> </span><br><span class="line"> (<span class="string">"EMP_ID"</span> <span class="built_in">NUMBER</span>(<span class="number">11</span>,<span class="number">0</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">ENABLE</span>, </span><br><span class="line"> <span class="string">"EMP_NAME"</span> <span class="built_in">VARCHAR2</span>(<span class="number">255</span> <span class="keyword">BYTE</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">ENABLE</span>, </span><br><span class="line"> <span class="string">"EMAIL"</span> <span class="built_in">VARCHAR2</span>(<span class="number">255</span> <span class="keyword">BYTE</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">ENABLE</span>, </span><br><span class="line"><span class="string">"GENDER"</span> <span class="built_in">CHAR</span>(<span class="number">1</span> <span class="keyword">BYTE</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">ENABLE</span>, </span><br><span class="line"><span class="string">"DEPT_ID"</span> <span class="built_in">NUMBER</span>(<span class="number">11</span>,<span class="number">0</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">ENABLE</span>, </span><br><span class="line"><span class="keyword">CONSTRAINT</span> <span class="string">"TBL_EMP2_PK"</span> PRIMARY <span class="keyword">KEY</span> (<span class="string">"EMP_ID"</span>)</span><br><span class="line"><span class="keyword">USING</span> <span class="keyword">INDEX</span> PCTFREE <span class="number">10</span> <span class="keyword">INITRANS</span> <span class="number">2</span> <span class="keyword">MAXTRANS</span> <span class="number">255</span> </span><br><span class="line"> <span class="keyword">STORAGE</span>(<span class="keyword">INITIAL</span> <span class="number">65536</span> <span class="keyword">NEXT</span> <span class="number">1048576</span> <span class="keyword">MINEXTENTS</span> <span class="number">1</span> <span class="keyword">MAXEXTENTS</span> <span class="number">2147483645</span></span><br><span class="line"><span class="keyword">PCTINCREASE</span> <span class="number">0</span> <span class="keyword">FREELISTS</span> <span class="number">1</span> <span class="keyword">FREELIST</span> <span class="keyword">GROUPS</span> <span class="number">1</span> <span class="keyword">BUFFER_POOL</span> <span class="keyword">DEFAULT</span> <span class="keyword">FLASH_CACHE</span> <span class="keyword">DEFAULT</span> CELL_FLASH_CACHE <span class="keyword">DEFAULT</span>)</span><br><span class="line"><span class="keyword">TABLESPACE</span> <span class="string">"SYSTEM"</span>  <span class="keyword">ENABLE</span>, </span><br><span class="line"><span class="keyword">CONSTRAINT</span> <span class="string">"TBL_EMP2_FK1"</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">"DEPT_ID"</span>)</span><br><span class="line"><span class="keyword">REFERENCES</span> <span class="string">"SYSTEM"</span>.<span class="string">"TBL_DEPT2"</span> (<span class="string">"DEPT_ID"</span>) <span class="keyword">ENABLE</span></span><br><span class="line">) PCTFREE <span class="number">10</span> <span class="keyword">PCTUSED</span> <span class="number">40</span> <span class="keyword">INITRANS</span> <span class="number">1</span> <span class="keyword">MAXTRANS</span> <span class="number">255</span> <span class="keyword">NOCOMPRESS</span> <span class="keyword">LOGGING</span></span><br><span class="line"><span class="keyword">STORAGE</span>(<span class="keyword">INITIAL</span> <span class="number">65536</span> <span class="keyword">NEXT</span> <span class="number">1048576</span> <span class="keyword">MINEXTENTS</span> <span class="number">1</span> <span class="keyword">MAXEXTENTS</span> <span class="number">2147483645</span></span><br><span class="line"><span class="keyword">PCTINCREASE</span> <span class="number">0</span> <span class="keyword">FREELISTS</span> <span class="number">1</span> <span class="keyword">FREELIST</span> <span class="keyword">GROUPS</span> <span class="number">1</span> <span class="keyword">BUFFER_POOL</span> <span class="keyword">DEFAULT</span> <span class="keyword">FLASH_CACHE</span> <span class="keyword">DEFAULT</span> CELL_FLASH_CACHE <span class="keyword">DEFAULT</span>)</span><br><span class="line"><span class="keyword">TABLESPACE</span> <span class="string">"SYSTEM"</span> ;</span><br></pre></td></tr></table></figure><p>​    2.部门表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">"SYSTEM"</span>.<span class="string">"TBL_DEPT2"</span> </span><br><span class="line">(<span class="string">"DEPT_ID"</span> <span class="built_in">NUMBER</span>(<span class="number">11</span>,<span class="number">0</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">ENABLE</span>, </span><br><span class="line"><span class="string">"DEPT_NAME"</span> <span class="built_in">VARCHAR2</span>(<span class="number">255</span> <span class="keyword">BYTE</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">ENABLE</span>, </span><br><span class="line"><span class="keyword">CONSTRAINT</span> <span class="string">"TBL_DEPT2_PK"</span> PRIMARY <span class="keyword">KEY</span> (<span class="string">"DEPT_ID"</span>)</span><br><span class="line"><span class="keyword">USING</span> <span class="keyword">INDEX</span> PCTFREE <span class="number">10</span> <span class="keyword">INITRANS</span> <span class="number">2</span> <span class="keyword">MAXTRANS</span> <span class="number">255</span> </span><br><span class="line"><span class="keyword">STORAGE</span>(<span class="keyword">INITIAL</span> <span class="number">65536</span> <span class="keyword">NEXT</span> <span class="number">1048576</span> <span class="keyword">MINEXTENTS</span> <span class="number">1</span> <span class="keyword">MAXEXTENTS</span> <span class="number">2147483645</span></span><br><span class="line"><span class="keyword">PCTINCREASE</span> <span class="number">0</span> <span class="keyword">FREELISTS</span> <span class="number">1</span> <span class="keyword">FREELIST</span> <span class="keyword">GROUPS</span> <span class="number">1</span> <span class="keyword">BUFFER_POOL</span> <span class="keyword">DEFAULT</span> <span class="keyword">FLASH_CACHE</span> <span class="keyword">DEFAULT</span> CELL_FLASH_CACHE <span class="keyword">DEFAULT</span>)</span><br><span class="line"><span class="keyword">TABLESPACE</span> <span class="string">"SYSTEM"</span>  <span class="keyword">ENABLE</span></span><br><span class="line">) PCTFREE <span class="number">10</span> <span class="keyword">PCTUSED</span> <span class="number">40</span> <span class="keyword">INITRANS</span> <span class="number">1</span> <span class="keyword">MAXTRANS</span> <span class="number">255</span> <span class="keyword">NOCOMPRESS</span> <span class="keyword">LOGGING</span></span><br><span class="line"><span class="keyword">STORAGE</span>(<span class="keyword">INITIAL</span> <span class="number">65536</span> <span class="keyword">NEXT</span> <span class="number">1048576</span> <span class="keyword">MINEXTENTS</span> <span class="number">1</span> <span class="keyword">MAXEXTENTS</span> <span class="number">2147483645</span></span><br><span class="line"><span class="keyword">PCTINCREASE</span> <span class="number">0</span> <span class="keyword">FREELISTS</span> <span class="number">1</span> <span class="keyword">FREELIST</span> <span class="keyword">GROUPS</span> <span class="number">1</span> <span class="keyword">BUFFER_POOL</span> <span class="keyword">DEFAULT</span> <span class="keyword">FLASH_CACHE</span> <span class="keyword">DEFAULT</span> CELL_FLASH_CACHE <span class="keyword">DEFAULT</span>)</span><br><span class="line"><span class="keyword">TABLESPACE</span> <span class="string">"SYSTEM"</span> ;</span><br></pre></td></tr></table></figure><p>​    3.Mybatis逆向工程（generatorConfig.xml）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"> ​<span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line">   ​<span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">"DB2Tables"</span> <span class="attr">targetRuntime</span>=<span class="string">"MyBatis3"</span>&gt;</span></span><br><span class="line">   ​<span class="comment">&lt;!--        不生成注释--&gt;</span></span><br><span class="line">   ​<span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">   ​<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressAllComments"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">   ​<span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">jdbcConnection</span> </span></span><br><span class="line"><span class="tag">                 <span class="attr">driverClass</span>=<span class="string">"oracle.jdbc.OracleDriver"</span></span></span><br><span class="line"><span class="tag">​<span class="attr">connectionURL</span>=<span class="string">"jdbc:oracle:thin:@localhost:1521:XE"</span></span></span><br><span class="line"><span class="tag">​<span class="attr">userId</span>=<span class="string">"system"</span></span></span><br><span class="line"><span class="tag">​<span class="attr">password</span>=<span class="string">"123456"</span>&gt;</span></span><br><span class="line">​<span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;<span class="name">javaTypeResolver</span> &gt;</span></span><br><span class="line">​<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"forceBigDecimals"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line">​<span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="comment">&lt;!--        javaBean--&gt;</span></span><br><span class="line">​<span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"com.hrms.bean"</span> <span class="attr">targetProject</span>=<span class="string">".\src\main\java"</span>&gt;</span></span><br><span class="line">​<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">​<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"trimStrings"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">​<span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="comment">&lt;!--        mapper.xml 映射文件--&gt;</span></span><br><span class="line">​<span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"mapper"</span>  <span class="attr">targetProject</span>=<span class="string">".\src\main\resources"</span>&gt;</span></span><br><span class="line">​<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">​<span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="comment">&lt;!--        mapper接口--&gt;</span></span><br><span class="line">​<span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">"XMLMAPPER"</span> <span class="attr">targetPackage</span>=<span class="string">"com.hrms.mapper"</span>  <span class="attr">targetProject</span>=<span class="string">".\src\main\java\"</span>&gt;</span></span><br><span class="line">​<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">​<span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="comment">&lt;!--        table对应的每个表的生成策略--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"tbl_emp2"</span> <span class="attr">domainObjectName</span>=<span class="string">"Employee"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"tbl_dept2"</span> <span class="attr">domainObjectName</span>=<span class="string">"Department"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">​<span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line">​<span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：mybatis generator生成的mapper.xml里面的 插入语句主键自增是默认数据库支持的（mysql支持 oracle不支持 需要用序列实现）  如果是oracle需要自己修改自增语句</strong></p><p>4.对搭建好的环境及pagehelper进行测试以及批量插入数据</p><hr><p>​    </p><p>​    </p><h2 id="第二步-前端搭建"><a href="#第二步-前端搭建" class="headerlink" title="第二步     前端搭建"></a>第二步     前端搭建</h2><p>​    (此处有疑惑可看aiguigu视频 因为我没怎么细学bootstrap主要是熟悉ssm 基本照搬过来的)<br>​    代码每一步有详细注释（基于的我理解）    基本都是将bootsrap文档里的 进行简单修改 </p><p><strong>基本面板：</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;    </span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container"</span>&gt;&lt;%--      标题--%&gt;      </span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span>&gt;        </span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-12"</span>&gt;          </span><br><span class="line">                &lt;h1&gt;SSM-CRUD&lt;/h1&gt;        </span><br><span class="line">            &lt;/div&gt;      </span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;%--      按钮--%&gt;      </span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span>&gt;        </span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-4 col-md-offset-8"</span>&gt;          </span><br><span class="line">                &lt;button type="button" class="btn btn-warning" id="emp_add_modal_btn"&gt;新增&lt;/button&gt;          </span><br><span class="line">                &lt;button type="button" class="btn btn-danger" id="emp_delete_modal_btn"&gt;删除&lt;/button&gt;        </span><br><span class="line">            &lt;/div&gt;      </span><br><span class="line">        &lt;/div&gt;&lt;%--  显示表格数据--%&gt;      </span><br><span class="line">        &lt;div class="row"&gt;&lt;/div&gt;          </span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-12"</span>&gt;</span><br><span class="line">            &lt;%--              添加id方便后面插入数据--%&gt;            </span><br><span class="line">            &lt;table <span class="class"><span class="keyword">class</span></span>=<span class="string">"table table-hover"</span> id=<span class="string">"emp_table"</span>&gt;                </span><br><span class="line">                &lt;thead&gt;                  </span><br><span class="line">                    &lt;tr&gt;                      </span><br><span class="line">                        &lt;th&gt;&lt;input type=<span class="string">"checkbox"</span> id=<span class="string">"check_all"</span> /&gt; </span><br><span class="line">                        &lt;/th&gt;                    </span><br><span class="line">                        &lt;th&gt;#&lt;/th&gt;                    </span><br><span class="line">                        &lt;th&gt;empName&lt;/th&gt;                    </span><br><span class="line">                        &lt;th&gt;gender&lt;/th&gt;                   </span><br><span class="line">                        &lt;th&gt;email&lt;/th&gt;                    </span><br><span class="line">                        &lt;th&gt;deptName&lt;/th&gt;                    </span><br><span class="line">                        &lt;th&gt;操作&lt;/th&gt;                  </span><br><span class="line">                    &lt;/tr&gt;                </span><br><span class="line">                &lt;/thead&gt;</span><br><span class="line">                &lt;%--                存放员工数据--%&gt;</span><br><span class="line">                &lt;tbody&gt;&lt;/tbody&gt;            </span><br><span class="line">            &lt;/table&gt;          </span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;%--        分页--%&gt;      </span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span>&gt;</span><br><span class="line">            &lt;%--          分页文字信息--%&gt;          </span><br><span class="line">            &lt;div class="col-md-6" id="page_text_Info"&gt;&lt;/div&gt;</span><br><span class="line">            &lt;%--          分页条--%&gt;          </span><br><span class="line">            &lt;div class="col-md-6" id="page_nav_area"&gt;&lt;/div&gt; </span><br><span class="line">        &lt;/div&gt;    </span><br><span class="line">    &lt;/div&gt;  </span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>​    </p><p><strong>为了防止代码臃肿 jsp大概的分为三个部分：</strong></p><blockquote><p>index.jsp + emp_modal_add.jsp + emp_modal_update.jsp</p></blockquote><p>​    </p><h4 id="每个jsp前后端功能大概分为下面："><a href="#每个jsp前后端功能大概分为下面：" class="headerlink" title="每个jsp前后端功能大概分为下面："></a>每个jsp前后端功能大概分为下面：</h4><blockquote><p>index：</p></blockquote><ul><li><p>主页自动加载员工数据</p></li><li><p>实现分页信息的数据显示</p></li><li><p>实现分页条的操作</p></li><li><p>全选/全不选 删除操作</p></li><li><p>导入增加和编辑模态框</p><p>​    </p></li></ul><blockquote><p>emp_modal_add:</p></blockquote><ul><li><p>实现将已存在的部门进行信息回显</p></li><li><p>对输入的信息进行校验 （格式是否合法 名字是否重复）</p></li><li><p>以及输入框的校验结果提示(利用bootrap提供的组件和样式配合JS进行重复修改)</p></li><li><p>前端校验完成后保存时同时进行后端校验 防止修改页面源码通过校验</p></li><li><p>每次新增后清空模态框信息 防止信息重复<br><strong>注意：每次bootstrap class里面的样式重新校验后要修改样式 都需要用removeClass将上次的样式删除才能重新赋值新样式</strong></p><p>​    </p></li></ul><blockquote><p>emp_modal_update：    </p></blockquote><ul><li>获取当前点击的员工信息<br> <strong><strong>【这里有一个问题 就是ajax异步请求 (异步局部刷新快 同步会堵塞)所以部门回显获取员工信息 不一定是前者先执行 有时候点击进去显示的并不正确】</strong></strong> </li><li>对修改的信息进行校验</li></ul><p>​    </p><p><strong><em>前端解析分页Json数据以及插入到表格中</em></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="comment">// 总记录数 当前页设为全局变量 后边跳转需要</span></span><br><span class="line">    <span class="keyword">var</span> totalRecord,currentPage;</span><br><span class="line"><span class="comment">//==========================获取员工分页数据==============================</span></span><br><span class="line"><span class="comment">// 加载完成直接发送ajax请求</span></span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    to_page(<span class="number">1</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// ajax请求跳转页面</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">to_page</span>(<span class="params">pageNumber</span>) </span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">"/SSM_HRMS_Project_war_exploded/EmployeeController/getEmps"</span>,</span><br><span class="line">        type:<span class="string">"GET"</span>,</span><br><span class="line">        data:<span class="string">"pageNumber="</span>+pageNumber,</span><br><span class="line">        success:(<span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (result.code==<span class="number">100</span>)&#123;</span><br><span class="line">                <span class="comment">// 解析员工数据</span></span><br><span class="line">                build_emps_table(result);</span><br><span class="line">                <span class="comment">// 解析分页信息</span></span><br><span class="line">                build_page_Info(result);</span><br><span class="line">                <span class="comment">// 解析分页条信息</span></span><br><span class="line">                build_page_nav(result);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                alert(result.extendInfo.emp_error_getEmps);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解析员工数据</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">build_emps_table</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//清空  防止重复插入相同数据</span></span><br><span class="line">    $(<span class="string">"#emp_table tbody"</span>).empty();</span><br><span class="line">    <span class="comment">// 获取page的查询结果list</span></span><br><span class="line">    <span class="keyword">var</span> emps=result.extendInfo.page.list;</span><br><span class="line">    <span class="comment">//item是遍历元素 index是索引</span></span><br><span class="line">    $.each(emps,<span class="function"><span class="keyword">function</span> (<span class="params">index, item</span>) </span>&#123;</span><br><span class="line">        <span class="comment">//将数据放到 TD标签中</span></span><br><span class="line">        <span class="keyword">var</span> checkbox=$(<span class="string">"&lt;td&gt;&lt;input type='checkbox' class='check_item'/&gt;&lt;/td&gt;"</span>);</span><br><span class="line">        <span class="keyword">var</span> empid=$(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(item.empId);</span><br><span class="line">        <span class="keyword">var</span> empName=$(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(item.empName);</span><br><span class="line">        <span class="keyword">var</span> email=$(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(item.email);</span><br><span class="line">        <span class="keyword">var</span> gender=$(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append((item.gender)==<span class="string">'M'</span>?<span class="string">"男"</span>:<span class="string">"女"</span>);</span><br><span class="line">        <span class="keyword">var</span> departmentName=$(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(item.department.deptName);</span><br><span class="line">        <span class="comment">// 先在button中添加class   再将&lt;span&gt;标签放到button中 在&lt;span&gt;标签中添加class 在将编辑加入标签中</span></span><br><span class="line">        <span class="keyword">var</span> edit_btn=$(<span class="string">"&lt;button&gt;&lt;/button&gt;"</span>).addClass(<span class="string">"btn btn-primary btn-sm  edit_btn"</span>).append(<span class="string">"&lt;span&gt;&lt;/span&gt;"</span>).addClass(<span class="string">"glyphicon glyphicon-pencil"</span>).append(<span class="string">"编辑"</span>);</span><br><span class="line">        <span class="comment">// 给每个员工的编辑按钮添加一个员工id 方便编辑时查询信息</span></span><br><span class="line">        edit_btn.attr(<span class="string">"edit-id"</span>,item.empId);</span><br><span class="line">        <span class="keyword">var</span> delete_btn=$(<span class="string">"&lt;button&gt;&lt;/button&gt;"</span>).addClass(<span class="string">"btn btn-success btn-sm  delete_btn"</span>).append(<span class="string">"&lt;span&gt;&lt;/span&gt;"</span>).addClass(<span class="string">"glyphicon glyphicon-trash"</span>).append(<span class="string">"删除"</span>);</span><br><span class="line">        <span class="comment">//给每个员工的删除按钮添加一个员工id 方便删除时传值</span></span><br><span class="line">        delete_btn.attr(<span class="string">"delete-id"</span>,item.empId);</span><br><span class="line">        <span class="comment">// 把按钮放到一个单元格中</span></span><br><span class="line">        <span class="keyword">var</span> btnTD=$(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(edit_btn).append(<span class="string">"  "</span>).append(delete_btn);</span><br><span class="line">        <span class="comment">//append()返回值为自身元素</span></span><br><span class="line">        <span class="comment">// 将所有TD列放到行标签TR中 最后添加到TBODY中</span></span><br><span class="line">        $(<span class="string">"&lt;tr&gt;&lt;/tr&gt;"</span>).append(checkbox)</span><br><span class="line">            .append(empid)</span><br><span class="line">            .append(empName)</span><br><span class="line">            .append(gender)</span><br><span class="line">            .append(email)</span><br><span class="line">            .append(departmentName)</span><br><span class="line">            .append(btnTD)</span><br><span class="line">            .appendTo(<span class="string">"#emp_table tbody"</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解析分页信息</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">build_page_Info</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">    $(<span class="string">"#page_text_Info"</span>).empty();</span><br><span class="line">    <span class="comment">// 获取pageInfo</span></span><br><span class="line">    <span class="keyword">var</span> pageInfo=result.extendInfo.page;</span><br><span class="line">    <span class="comment">// 当前页</span></span><br><span class="line">    currentPage=pageInfo.pageNum;</span><br><span class="line">    <span class="comment">// 总页数</span></span><br><span class="line">    <span class="keyword">var</span> totalPages=pageInfo.pages;</span><br><span class="line">    <span class="comment">//总记录数</span></span><br><span class="line">    totalRecord = pageInfo.total;</span><br><span class="line">    <span class="comment">// 插入到分页信息div里</span></span><br><span class="line">    $(<span class="string">"#page_text_Info"</span>).append(<span class="string">"第"</span>+currentPage+<span class="string">"页，共"</span>+totalPages+<span class="string">"页，总共有"</span>+totalRecord+<span class="string">"条记录"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解析分页条信息</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">build_page_nav</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//删除重复的分页条</span></span><br><span class="line">    $(<span class="string">"#page_nav_area"</span>).empty();</span><br><span class="line">    <span class="comment">//ul</span></span><br><span class="line">    <span class="keyword">var</span> ul=$(<span class="string">"&lt;ul&gt;&lt;/ul&gt;"</span>).addClass(<span class="string">"pagination"</span>);</span><br><span class="line">    <span class="comment">//首页</span></span><br><span class="line">    <span class="keyword">var</span> firstPage=$(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).append($(<span class="string">"&lt;a&gt;&lt;/a&gt;"</span>).append(<span class="string">"首页"</span>).attr(<span class="string">"href"</span>,<span class="string">"#"</span>));</span><br><span class="line">    <span class="comment">//上一页&amp;laquo;</span></span><br><span class="line">    <span class="keyword">var</span> prePage=$(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).append($(<span class="string">"&lt;a&gt;&lt;/a&gt;"</span>).append(<span class="string">"&amp;laquo;"</span>).attr(<span class="string">"href"</span>,<span class="string">"#"</span>));</span><br><span class="line">    <span class="comment">//如果没有前一页则给首页和上一页按钮添加一个标识</span></span><br><span class="line">    <span class="keyword">if</span>(!result.extendInfo.page.hasPreviousPage)&#123;</span><br><span class="line">        firstPage.addClass(<span class="string">"disabled"</span>);</span><br><span class="line">        prePage.addClass(<span class="string">"disabled"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//如果有上一页 为页面增加点击事件 首页</span></span><br><span class="line">        firstPage.click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            to_page(<span class="number">1</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">//上一页</span></span><br><span class="line">        prePage.click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            to_page(result.extendInfo.page.pageNum<span class="number">-1</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//下一页</span></span><br><span class="line">    <span class="keyword">var</span> nextPage=$(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).append($(<span class="string">"&lt;a&gt;&lt;/a&gt;"</span>).append(<span class="string">"&amp;raquo;"</span>).attr(<span class="string">"href"</span>,<span class="string">"#"</span>));</span><br><span class="line">    <span class="comment">//尾页</span></span><br><span class="line">    <span class="keyword">var</span> lastPage=$(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).append($(<span class="string">"&lt;a&gt;&lt;/a&gt;"</span>).append(<span class="string">"尾页"</span>).attr(<span class="string">"href"</span>,<span class="string">"#"</span>));</span><br><span class="line">    <span class="keyword">if</span>(!result.extendInfo.page.hasNextPage)&#123;</span><br><span class="line">        nextPage.addClass(<span class="string">"disabled"</span>);</span><br><span class="line">        lastPage.addClass(<span class="string">"disabled"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        nextPage.click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            to_page(result.extendInfo.page.pageNum+<span class="number">1</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        lastPage.click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            to_page(result.extendInfo.page.pages);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//先将前两个按钮添加到ul</span></span><br><span class="line">    ul.append(firstPage).append(prePage)</span><br><span class="line">    <span class="comment">//1,2,3,4,5 遍历生成页码的同时 将页码插入分页条</span></span><br><span class="line">    $.each(result.extendInfo.page.navigatepageNums,<span class="function"><span class="keyword">function</span> (<span class="params">index,item</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> pageNum=$(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).append($(<span class="string">"&lt;a&gt;&lt;/a&gt;"</span>).append(item).attr(<span class="string">"href"</span>,<span class="string">"#"</span>));</span><br><span class="line">        <span class="comment">// 给当前页码加上深色</span></span><br><span class="line">        <span class="keyword">if</span>(result.extendInfo.page.pageNum === item)&#123;</span><br><span class="line">            pageNum.addClass(<span class="string">"active"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        pageNum.click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            to_page(item);</span><br><span class="line">        &#125;)</span><br><span class="line">        ul.append(pageNum);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 最后插入下一页跟尾页</span></span><br><span class="line">    ul.append(nextPage).append(lastPage)</span><br><span class="line">    <span class="comment">//按bootstrap要求创建nav 并把ul添加到nav</span></span><br><span class="line">    <span class="keyword">var</span> nav=$(<span class="string">"&lt;nav&gt;&lt;/nav&gt;"</span>).append(ul).attr(<span class="string">"aria-label"</span>,<span class="string">"Page navigation"</span>);</span><br><span class="line">    <span class="comment">//从内到外 最后把nav插入到分页条div中</span></span><br><span class="line">    $(<span class="string">"#page_nav_area"</span>).append(nav);</span><br><span class="line">    <span class="comment">// 或nav.appendTo("#page_nav_area");</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>​    </p><h2 id><a href="#" class="headerlink" title></a></h2><p>​    </p><h2 id="第三步-后端实现CRUD"><a href="#第三步-后端实现CRUD" class="headerlink" title="第三步     后端实现CRUD"></a>第三步     后端实现CRUD</h2><blockquote><p><strong>工具类</strong>：建立一个JsonMsg类管理Json类型数据</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> doddd </span></span><br><span class="line"><span class="comment">* <span class="doctag">@date</span> 2019/11/19-15:36 </span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="comment">//处理Json格式信息  减少请求public </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JsonMsg</span> </span>&#123;    <span class="keyword">private</span> <span class="keyword">int</span> code;</span><br><span class="line">               <span class="comment">//状态码 成功：100 失败：200    </span></span><br><span class="line">               <span class="keyword">private</span> String msg;</span><br><span class="line">               <span class="comment">//操作信息    </span></span><br><span class="line">               <span class="keyword">private</span> HashMap&lt;String,Object&gt; extendInfo =<span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">               <span class="comment">//填充返回信息    </span></span><br><span class="line">               <span class="function"><span class="keyword">public</span> <span class="title">JsonMsg</span><span class="params">(<span class="keyword">int</span> code, String msg, HashMap&lt;String, Object&gt; extend)</span></span>&#123;        </span><br><span class="line">                   <span class="keyword">this</span>.code = code;        </span><br><span class="line">                   <span class="keyword">this</span>.msg = msg;        </span><br><span class="line">                   <span class="keyword">this</span>.extendInfo = extend;    </span><br><span class="line">               &#125;    </span><br><span class="line">               <span class="function"><span class="keyword">public</span> <span class="title">JsonMsg</span><span class="params">()</span> </span>&#123;    &#125;    </span><br><span class="line">               <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;        <span class="keyword">return</span> code;    &#125;    </span><br><span class="line">               <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCode</span><span class="params">(<span class="keyword">int</span> code)</span> </span>&#123;        <span class="keyword">this</span>.code = code;    &#125;    </span><br><span class="line">               <span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;        <span class="keyword">return</span> msg;    &#125;    </span><br><span class="line">               <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMsg</span><span class="params">(String msg)</span> </span>&#123;        <span class="keyword">this</span>.msg = msg;    &#125;    </span><br><span class="line">               <span class="function"><span class="keyword">public</span> HashMap&lt;String, Object&gt; <span class="title">getExtendInfo</span><span class="params">()</span></span>&#123;       <span class="keyword">return</span> extendInfo;    &#125;    </span><br><span class="line">               <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setExtendInfo</span><span class="params">(HashMap&lt;String, Object&gt; extendInfo)</span> </span>&#123; </span><br><span class="line">                   <span class="keyword">this</span>.extendInfo = extendInfo;    </span><br><span class="line">               &#125;    </span><br><span class="line">               <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JsonMsg <span class="title">success</span><span class="params">()</span></span>&#123;        </span><br><span class="line">                   JsonMsg json=<span class="keyword">new</span> JsonMsg();        </span><br><span class="line">                   json.setCode(<span class="number">100</span>);        </span><br><span class="line">                   json.setMsg(<span class="string">"操作成功"</span>);        </span><br><span class="line">                   <span class="keyword">return</span>  json;    &#125;    </span><br><span class="line">               <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JsonMsg <span class="title">fail</span><span class="params">()</span></span>&#123;        </span><br><span class="line">                   JsonMsg json=<span class="keyword">new</span> JsonMsg();        </span><br><span class="line">                   json.setCode(<span class="number">200</span>);        </span><br><span class="line">                   json.setMsg(<span class="string">"操作失败"</span>);        </span><br><span class="line">                   <span class="keyword">return</span>  json;    &#125;    </span><br><span class="line">               <span class="function"><span class="keyword">public</span> JsonMsg <span class="title">addInfo</span><span class="params">(String key,Object value)</span></span>&#123;</span><br><span class="line">                   <span class="keyword">this</span>.extendInfo.put(key,value);</span><br><span class="line">                   <span class="keyword">return</span> <span class="keyword">this</span>;    </span><br><span class="line">                &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>​    </p><blockquote><p><strong>业务逻辑层</strong>：EmployeeService</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> doddd</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/11/19-10:25</span></span><br><span class="line"><span class="comment">   **/</span></span><br><span class="line">   <span class="meta">@Service</span></span><br><span class="line">   <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeService</span> </span>&#123;</span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   EmployeeMapper employeeMapper;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> employeeMapper.getAll();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">saveEmp</span><span class="params">(Employee employee)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> employeeMapper.insert(employee);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//检查名字是否可用</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">checkName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">       <span class="comment">//从employeeExample中获取criteria</span></span><br><span class="line">       EmployeeExample employeeExample=<span class="keyword">new</span> EmployeeExample();</span><br><span class="line">       EmployeeExample.Criteria criteria = employeeExample.createCriteria();</span><br><span class="line">       <span class="comment">//再利用criteria调取相关条件方法 实现条件查询 当前条件是查询同名  返回符合条件人数</span></span><br><span class="line">       criteria.andEmpNameEqualTo(name);</span><br><span class="line">       <span class="keyword">long</span> count = employeeMapper.countByExample(employeeExample);</span><br><span class="line">       <span class="keyword">return</span> count==<span class="number">0</span>?<span class="keyword">true</span>:<span class="keyword">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Employee <span class="title">getEmp</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//查询等于主键的员工信息</span></span><br><span class="line">        <span class="keyword">return</span> employeeMapper.selectByPrimaryKey(id);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateEmp</span><span class="params">(Employee employee)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        根据主键有选择的更新</span></span><br><span class="line">        <span class="keyword">return</span> employeeMapper.updateByPrimaryKeySelective(employee);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteEmp</span><span class="params">(Integer empId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> employeeMapper.deleteByPrimaryKey(empId);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteBatch</span><span class="params">(List&lt;Integer&gt; empIds)</span> </span>&#123;</span><br><span class="line">        EmployeeExample employeeExample=<span class="keyword">new</span> EmployeeExample();</span><br><span class="line">        EmployeeExample.Criteria criteria = employeeExample.createCriteria();</span><br><span class="line">        <span class="comment">//设置条件员工id在一个list里面  sql变成DELETE from xxx where empId in (list集合)</span></span><br><span class="line">        criteria.andEmpIdIn(empIds);</span><br><span class="line">        <span class="keyword">return</span> employeeMapper.deleteByExample(employeeExample);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    </p><blockquote><p><strong>控制层</strong>：EmployeeController（实现前后端交互）</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">获取分页数据:</span><br><span class="line">   <span class="meta">@RequestMapping</span>(value = <span class="string">"getEmps"</span>,method = RequestMethod.GET)</span><br><span class="line">   <span class="meta">@ResponseBody</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> JsonMsg <span class="title">getEmps</span><span class="params">(@RequestParam(value = <span class="string">"pageNumber"</span>,defaultValue = <span class="string">"1"</span>)</span><span class="keyword">int</span> pageNumber)</span>&#123;</span><br><span class="line">       <span class="comment">//引入分页插件</span></span><br><span class="line">       <span class="comment">//传入当前页跟页面大小</span></span><br><span class="line">       PageHelper.startPage(pageNumber,<span class="number">5</span>);</span><br><span class="line">       List&lt;Employee&gt; all = employeeService.getAll();</span><br><span class="line">       <span class="comment">//使用pageInfo包装查询的结果</span></span><br><span class="line">       <span class="comment">//封装了详细的分页信息,包括我们查询的数据 ,连续传入5页</span></span><br><span class="line">       PageInfo page=<span class="keyword">new</span> PageInfo(all,<span class="number">5</span>);</span><br><span class="line">       <span class="keyword">return</span> page!=<span class="keyword">null</span>?JsonMsg.success().addInfo(<span class="string">"page"</span>,page):JsonMsg.fail().addInfo(<span class="string">"emp_error_getEmps"</span>,<span class="string">"查询员工信息时发生错误"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">新增员工：</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"saveEmp"</span>,method = RequestMethod.POST)</span><br><span class="line"><span class="function"><span class="keyword">public</span> JsonMsg <span class="title">saveEmp</span><span class="params">(@Valid Employee employee, BindingResult bindingResult)</span></span>&#123;</span><br><span class="line"><span class="comment">//保存错误信息</span></span><br><span class="line">Map map=<span class="keyword">new</span> HashMap();</span><br><span class="line"><span class="keyword">if</span>(bindingResult.hasErrors())&#123;</span><br><span class="line"><span class="keyword">for</span> (FieldError fieldError : bindingResult.getFieldErrors()) &#123;</span><br><span class="line"><span class="comment">//fieldError.getField()拿到错误的字段  fieldError.getDefaultMessage()拿到错误的消息 传回前端</span></span><br><span class="line">map.put(fieldError.getField(),fieldError.getDefaultMessage());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> JsonMsg.fail().addInfo(<span class="string">"emp_fail_saveEmp"</span>,map);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//            保存时进行后端同名校验 防止用户修改页面进行注入</span></span><br><span class="line"><span class="keyword">if</span>(checkName(employee.getEmpName()).getCode()==<span class="number">100</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> result = employeeService.saveEmp(employee);</span><br><span class="line"><span class="keyword">return</span> result==<span class="number">1</span>?JsonMsg.success().addInfo(<span class="string">"emp_success_saveEmp"</span>,<span class="string">"员工新增成功"</span>):JsonMsg.fail().addInfo(<span class="string">"emp_fail_saveEmp"</span>,<span class="string">"新增员工时发生错误"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">map.put(<span class="string">"repeat"</span>,<span class="string">"用户名重复"</span>);</span><br><span class="line"><span class="keyword">return</span> JsonMsg.fail().addInfo(<span class="string">"emp_fail_saveEmp"</span>,map);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">校验名字：</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"checkName"</span>,method = RequestMethod.GET)</span><br><span class="line"><span class="function"><span class="keyword">public</span> JsonMsg <span class="title">checkName</span><span class="params">(@RequestParam(<span class="string">"name"</span>)</span> String name)</span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> result=employeeService.checkName(name);</span><br><span class="line"><span class="keyword">return</span> result==<span class="keyword">true</span>?JsonMsg.success():JsonMsg.fail();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查询当前id的员工信息:</span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"getEmp"</span>,method = RequestMethod.GET)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> JsonMsg <span class="title">getEmp</span><span class="params">(@RequestParam(<span class="string">"id"</span>)</span>Integer id)</span>&#123;</span><br><span class="line">       Employee emp = employeeService.getEmp(id);</span><br><span class="line">       <span class="keyword">return</span> emp!=<span class="keyword">null</span>?JsonMsg.success().addInfo(<span class="string">"emp"</span>,emp):JsonMsg.fail().addInfo(<span class="string">"emp_fail_getEmp"</span>,<span class="string">"获取员工信息失败"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">接受前端传来的新员工信息 对数据库信息进行更新:</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"updateEmp/&#123;empId&#125;"</span>,method = RequestMethod.PUT)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> JsonMsg <span class="title">updateEmp</span><span class="params">(Employee employee)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = employeeService.updateEmp(employee);</span><br><span class="line">        <span class="keyword">return</span> result==<span class="number">1</span>?JsonMsg.success().addInfo(<span class="string">"emp_success_updateEmp"</span>,<span class="string">"员工信息更新成功"</span>):JsonMsg.fail().addInfo(<span class="string">"emp_fail_updateEmp"</span>,<span class="string">"员工信息更新失败"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">删除一个或多个员工  (<span class="number">1</span>)或(<span class="number">1</span>-<span class="number">2</span>-<span class="number">3</span>-<span class="number">4</span>):</span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"deleteEmp"</span>,method = RequestMethod.DELETE)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JsonMsg <span class="title">deleteEmp</span><span class="params">(@RequestParam(<span class="string">"empIds"</span>)</span> String empIds)</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result;</span><br><span class="line">        <span class="keyword">if</span>(empIds.contains(<span class="string">"-"</span>))&#123;</span><br><span class="line">            List&lt;Integer&gt; ids=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            String[] split = empIds.split(<span class="string">"-"</span>);</span><br><span class="line">            <span class="keyword">for</span> (String s : split) &#123;</span><br><span class="line">                ids.add(Integer.parseInt(s));</span><br><span class="line">            &#125;</span><br><span class="line">            result = employeeService.deleteBatch(ids);</span><br><span class="line">            System.out.println(result);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            Integer empId=Integer.parseInt(empIds);</span><br><span class="line">            result = employeeService.deleteEmp(empId);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result&gt;<span class="number">0</span>?JsonMsg.success().addInfo(<span class="string">"emp_success_deleteEmp"</span>,<span class="string">"员工删除成功"</span>):JsonMsg.fail().addInfo(<span class="string">"emp_fail_deleteEmp"</span>,<span class="string">"员工删除异常"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​    </p><ul><li>后端基本按照ssm框架操作 利用注释将类注册到IOC容器中 使用时再用@AutoWired自动装配</li><li>Mybatis生成的Mapper.xml里面有丰富的按条件CRUD 配合生成的EmployeeExample类进行使用</li><li>pagehelper不能直接配合联合查询使用  需要嵌套子查询 通过子查询返回部分内容<br>如：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">//pagehelper一对多时需要子查询嵌套使用（不能使用innner join联表）</span><br><span class="line">​<span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"BaseResultMap"</span> <span class="attr">type</span>=<span class="string">"com.hrms.bean.Employee"</span>&gt;</span></span><br><span class="line">​<span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"EMP_ID"</span> <span class="attr">jdbcType</span>=<span class="string">"DECIMAL"</span> <span class="attr">property</span>=<span class="string">"empId"</span> /&gt;</span></span><br><span class="line">​<span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"EMP_NAME"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> <span class="attr">property</span>=<span class="string">"empName"</span> /&gt;</span></span><br><span class="line">​<span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"EMAIL"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> <span class="attr">property</span>=<span class="string">"email"</span> /&gt;</span></span><br><span class="line">​<span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"GENDER"</span> <span class="attr">jdbcType</span>=<span class="string">"CHAR"</span> <span class="attr">property</span>=<span class="string">"gender"</span> /&gt;</span></span><br><span class="line">​<span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"DEPT_ID"</span> <span class="attr">jdbcType</span>=<span class="string">"DECIMAL"</span> <span class="attr">property</span>=<span class="string">"deptId"</span> /&gt;</span></span><br><span class="line">​ <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​//extends是继承BaseResultMap</span><br><span class="line">​  <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"WithDeptBaseResultMap"</span> <span class="attr">type</span>=<span class="string">"com.hrms.bean.Employee"</span> <span class="attr">extends</span>=<span class="string">"BaseResultMap"</span>&gt;</span></span><br><span class="line">​<span class="comment">&lt;!--   指定联合查询 查询部门--&gt;</span></span><br><span class="line">​<span class="comment">&lt;!--    JavaType和ofType都是用来指定对象类型的，但是JavaType是用来指定pojo中属性的类型，而ofType指定的是映射到list集合属性中pojo的类型。</span></span><br><span class="line"><span class="comment">​javaType用来指定对象所属的java数据类型，也就是private List&lt;Post&gt;posts 的ArrayList类型</span></span><br><span class="line"><span class="comment">​ofType用来指定对象的所属javaBean类,也就是尖括号的泛型private List&lt;Post&gt;posts--&gt;</span></span><br><span class="line">​<span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"department"</span> <span class="attr">ofType</span>=<span class="string">"com.hrms.bean.Department"</span> <span class="attr">select</span>=<span class="string">"find_dept_id"</span> <span class="attr">column</span>=<span class="string">"dept_id"</span>&gt;</span></span><br><span class="line">​  <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"dept_id"</span> <span class="attr">property</span>=<span class="string">"deptId"</span> /&gt;</span></span><br><span class="line">​  <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"dept_name"</span> <span class="attr">property</span>=<span class="string">"deptName"</span> /&gt;</span></span><br><span class="line">​<span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">​  <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">​</span><br><span class="line">​//在collection中指定子查询语句是find_dept_id 把关联键column=dept_id传到子查询 再把结果返回给主查询</span><br><span class="line">​  <span class="comment">&lt;!--  子查询--&gt;</span></span><br><span class="line">​  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"find_dept_id"</span> <span class="attr">resultType</span>=<span class="string">"com.hrms.bean.Department"</span> <span class="attr">parameterType</span>=<span class="string">"Integer"</span>&gt;</span></span><br><span class="line">​select D.DEPT_ID,D.DEPT_NAME</span><br><span class="line">​from TBL_DEPT2 D</span><br><span class="line">​WHERE D.DEPT_ID=#&#123;dept_id&#125;</span><br><span class="line">​  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​//主查询只查该类的内容（该类里面的成员变量 不包括department） 不查其他的类(department交给子查询)</span><br><span class="line">​  <span class="comment">&lt;!--  查询所有人信息--&gt;</span></span><br><span class="line">​  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getAll"</span> <span class="attr">resultMap</span>=<span class="string">"WithDeptBaseResultMap"</span>&gt;</span></span><br><span class="line">​select</span><br><span class="line">​<span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"Base_Column_List"</span> /&gt;</span></span><br><span class="line">​from TBL_EMP2 E</span><br><span class="line">​  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<br>​    很多细节以及功能如何实现都在源码里 这里就不细说了<br>​<br>​    感谢前辈的代码以及aiguigu视频 讲的都很详细<br>​    记录一次ssm项目实记<br>​    源码地址<a href="https://github.com/doddd-col/Spring-Mybatis" target="_blank" rel="noopener">SSM_HRMS_Project</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SSM-HRMS-Project&quot;&gt;&lt;a href=&quot;#SSM-HRMS-Project&quot; class=&quot;headerlink&quot; title=&quot;SSM_HRMS_Project&quot;&gt;&lt;/a&gt;SSM_HRMS_Project&lt;/h1&gt;&lt;p&gt;刚学完Spring等框架，从网上借鉴一些前辈的项目架构（代码就是从模仿开始….） 还有aiguigu的视频结合 完成这个入门级的练手SSM项目&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/noaman_wgs/article/details/79503559&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;借鉴链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/11/22/%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%AE%B0SSM-HRMS-Project/SSM_page.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;目的是熟悉ssm框架以及前后端的一个简单搭建流程 完成CRUD等简单操作 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Spring" scheme="http://yoursite.com/tags/Spring/"/>
    
      <category term="SpringMVC" scheme="http://yoursite.com/tags/SpringMVC/"/>
    
      <category term="Mybatis" scheme="http://yoursite.com/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/11/22/hello-world/"/>
    <id>http://yoursite.com/2019/11/22/hello-world/</id>
    <published>2019-11-22T13:02:46.834Z</published>
    <updated>2019-11-22T13:02:46.834Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
